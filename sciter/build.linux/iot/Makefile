# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_x32
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_x32)
  usciter_config = debug_x32
  uminimal_config = debug_x32
  ulayered_config = debug_x32
  inspector_config = debug_x32
  notepad_config = debug_x32
  notes_config = debug_x32
  sciter_sqlite_config = debug_x32
  glfw_opengl_config = debug_x32

else ifeq ($(config),debug_x64)
  usciter_config = debug_x64
  uminimal_config = debug_x64
  ulayered_config = debug_x64
  inspector_config = debug_x64
  notepad_config = debug_x64
  notes_config = debug_x64
  sciter_sqlite_config = debug_x64
  glfw_opengl_config = debug_x64

else ifeq ($(config),debug_arm32)
  usciter_config = debug_arm32
  uminimal_config = debug_arm32
  ulayered_config = debug_arm32
  inspector_config = debug_arm32
  notepad_config = debug_arm32
  notes_config = debug_arm32
  sciter_sqlite_config = debug_arm32
  glfw_opengl_config = debug_arm32

else ifeq ($(config),debug_arm64)
  usciter_config = debug_arm64
  uminimal_config = debug_arm64
  ulayered_config = debug_arm64
  inspector_config = debug_arm64
  notepad_config = debug_arm64
  notes_config = debug_arm64
  sciter_sqlite_config = debug_arm64
  glfw_opengl_config = debug_arm64

else ifeq ($(config),release_x32)
  usciter_config = release_x32
  uminimal_config = release_x32
  ulayered_config = release_x32
  inspector_config = release_x32
  notepad_config = release_x32
  notes_config = release_x32
  sciter_sqlite_config = release_x32
  glfw_opengl_config = release_x32

else ifeq ($(config),release_x64)
  usciter_config = release_x64
  uminimal_config = release_x64
  ulayered_config = release_x64
  inspector_config = release_x64
  notepad_config = release_x64
  notes_config = release_x64
  sciter_sqlite_config = release_x64
  glfw_opengl_config = release_x64

else ifeq ($(config),release_arm32)
  usciter_config = release_arm32
  uminimal_config = release_arm32
  ulayered_config = release_arm32
  inspector_config = release_arm32
  notepad_config = release_arm32
  notes_config = release_arm32
  sciter_sqlite_config = release_arm32
  glfw_opengl_config = release_arm32

else ifeq ($(config),release_arm64)
  usciter_config = release_arm64
  uminimal_config = release_arm64
  ulayered_config = release_arm64
  inspector_config = release_arm64
  notepad_config = release_arm64
  notes_config = release_arm64
  sciter_sqlite_config = release_arm64
  glfw_opengl_config = release_arm64

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := usciter uminimal ulayered inspector notepad notes sciter-sqlite glfw-opengl

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

usciter:
ifneq (,$(usciter_config))
	@echo "==== Building usciter ($(usciter_config)) ===="
	@${MAKE} --no-print-directory -C . -f usciter.make config=$(usciter_config)
endif

uminimal:
ifneq (,$(uminimal_config))
	@echo "==== Building uminimal ($(uminimal_config)) ===="
	@${MAKE} --no-print-directory -C . -f uminimal.make config=$(uminimal_config)
endif

ulayered:
ifneq (,$(ulayered_config))
	@echo "==== Building ulayered ($(ulayered_config)) ===="
	@${MAKE} --no-print-directory -C . -f ulayered.make config=$(ulayered_config)
endif

inspector:
ifneq (,$(inspector_config))
	@echo "==== Building inspector ($(inspector_config)) ===="
	@${MAKE} --no-print-directory -C . -f inspector.make config=$(inspector_config)
endif

notepad:
ifneq (,$(notepad_config))
	@echo "==== Building notepad ($(notepad_config)) ===="
	@${MAKE} --no-print-directory -C . -f notepad.make config=$(notepad_config)
endif

notes:
ifneq (,$(notes_config))
	@echo "==== Building notes ($(notes_config)) ===="
	@${MAKE} --no-print-directory -C . -f notes.make config=$(notes_config)
endif

sciter-sqlite:
ifneq (,$(sciter_sqlite_config))
	@echo "==== Building sciter-sqlite ($(sciter_sqlite_config)) ===="
	@${MAKE} --no-print-directory -C . -f sciter-sqlite.make config=$(sciter_sqlite_config)
endif

glfw-opengl:
ifneq (,$(glfw_opengl_config))
	@echo "==== Building glfw-opengl ($(glfw_opengl_config)) ===="
	@${MAKE} --no-print-directory -C . -f glfw-opengl.make config=$(glfw_opengl_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f usciter.make clean
	@${MAKE} --no-print-directory -C . -f uminimal.make clean
	@${MAKE} --no-print-directory -C . -f ulayered.make clean
	@${MAKE} --no-print-directory -C . -f inspector.make clean
	@${MAKE} --no-print-directory -C . -f notepad.make clean
	@${MAKE} --no-print-directory -C . -f notes.make clean
	@${MAKE} --no-print-directory -C . -f sciter-sqlite.make clean
	@${MAKE} --no-print-directory -C . -f glfw-opengl.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_x32"
	@echo "  debug_x64"
	@echo "  debug_arm32"
	@echo "  debug_arm64"
	@echo "  release_x32"
	@echo "  release_x64"
	@echo "  release_arm32"
	@echo "  release_arm64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   usciter"
	@echo "   uminimal"
	@echo "   ulayered"
	@echo "   inspector"
	@echo "   notepad"
	@echo "   notes"
	@echo "   sciter-sqlite"
	@echo "   glfw-opengl"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"